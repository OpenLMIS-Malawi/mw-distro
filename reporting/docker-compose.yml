version: "3.3"

services:
  config-container:
    command: /init.sh
    build:
      context: ./config
    volumes:
      - config-volume:/config

  scalyr:
    image: openlmis/scalyr
    env_file: settings.env
    volumes:
      - config-volume:/config
      - ${SCALYR_DOCKER_SOCK}:/var/scalyr/docker.sock
      - syslog:/var/log/reporting

  log:
    image: openlmis/rsyslog:${OL_RSYSLOG_VERSION}
    volumes:
      - syslog:/var/log
    ports:
      - "${SYSLOG_UDP_PORT}:514/udp"

  consul:
    command: -server -bootstrap
    image: gliderlabs/consul-server
    ports:
      - "8501:8500"
    logging:
      driver: syslog
      options:
        syslog-address: "udp://127.0.0.1:${SYSLOG_UDP_PORT}"
    depends_on: [log]

  nginx:
    image: openlmis/nginx:${OL_NGINX_VERSION}
    ports:
      - "${OL_HTTP_PORT:-80}:80"
      - "${OL_HTTPS_PORT:-443}:443"
    env_file: settings.env
    environment:
      NGINX_LOG_DIR: '/var/log/nginx/log'
    volumes:
      - config-volume:/config
    entrypoint: bash -c "/config/nginx/init.sh"
    depends_on: [consul, log, config-container]

  nifi:
    image: apache/nifi:${OL_NIFI_VERSION}
    expose:
      - "8080"
    volumes:
      - config-volume:/config
      - ./nifi-cache:/tmp/nifi-docker-cache
    entrypoint: >
      bash -c "/config/nifi/scripts/start.sh ${OL_NIFI_VERSION}"
    environment:
      - NIFI_JVM_HEAP_INIT=${NIFI_JVM_HEAP_INIT}
      - NIFI_JVM_HEAP_MAX=${NIFI_JVM_HEAP_MAX}
    depends_on: [log, config-container, nginx]
    env_file: settings.env

  db-service-configuration:
    build:
      context: ./db
    volumes:
      - db-config-volume:/docker-entrypoint-initdb.d

  db:
    image: openlmis/postgres:${OL_POSTGRES_VERSION}
    env_file: settings.env
    volumes:
        - db-config-volume:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    depends_on: [log, db-service-configuration]
    env_file: settings.env

  superset:
    build:
      context: ./superset
      args:
        SUPERSET_VERSION: ${OL_SUPERSET_VERSION}
        SUPERSET_PATCHUP_VERSION: ${OL_SUPERSET_PATCHUP_VERSION}
    expose:
      - "8088"
    volumes:
      - config-volume:/config
    command: >
        bash -c "cp -r /config/superset /etc/
        && sh /etc/superset/init.sh"
    depends_on: [db, config-container, nginx]
    env_file: settings.env

volumes:
  syslog:
    external: false
  config-volume:
    external: false
  db-config-volume:
    external: false
